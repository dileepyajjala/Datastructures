#include<stdio.h>
int g[10][10]={
{0,1,1,0,0,0,0,0},
{1,0,0,1,1,0,0,0},
{1,0,0,0,0,1,1,0}, {0,1,0,0,0,0,0,1},
{0,1,0,0,0,0,0,1},
{0,0,1,0,0,0,0,1},
{0,0,1,0,0,0,0,1},
{0,0,0,1,1,1,1,1}
};
int v[10]={0,0,0,0,0,0,0,0,0,0};
int n=8;
int queue[30];
int r=-1,f=-1;
int isempty()
{
if(f==-1)
return 1;
return 0;
}
int isfull()
{
if(r==n-1)
return 1;
return 0;
}
void enqueue(int x)
{
if(isfull())
puts("Queue is Full");
else
{
if(f==-1)
f=0;
r++;
queue[r]=x;
}
}
int dequeue()
{
int x=-1;
if(isempty())
puts("Queue is enpty");
else
{
x=queue[f];
if(f==r)
f=r=-1;
else
f++;
return x;
}
}
void BFS(int G[10][10],int s)
{
int i,j;
v[s]=1;
enqueue(s);
while(!isempty())
{
s=dequeue();
printf("%d ",s);
for(i=0;i<n;i++)
if(G[s][i]==1 && v[i]==0)
{
v[i]=1;
enqueue(i);
}
}
}
int main()
{
BFS(g,0);
}
